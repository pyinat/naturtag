name: Build

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]
  workflow_dispatch:
env:
  LATEST_PY_VERSION: '3.9'
  COVERAGE_ARGS: '--cov --cov-report=term --cov-report=html'

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - uses: snok/install-poetry@v1.3.1
        with:
          version: 1.2.0a2
          virtualenvs-in-project: true

      # Cache packages per python version, and reuse until lockfile changes
      - name: Cache python packages
        id: cache
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install -v -E all

      - name: Run CLI smoke test
        run: |
          source $VENV
          naturtag -cdo 45524803
          naturtag -cdt 48978
      - name: Run unit tests
        run: poetry run pytest test

  # Run code analysis checks, reports, etc.
  analyze:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ env.LATEST_PY_VERSION }}
      - uses: snok/install-poetry@v1.3.1
        with:
          version: 1.2.0a2
          virtualenvs-in-project: true

      # Cache packages and reuse until lockfile changes
      - name: Cache python packages
        id: cache
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ env.LATEST_PY_VERSION }}-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install -v -E all

      - name: Run style checks, type checks, and linting
        run: |
          source $VENV
          black --check --diff .
          isort --check --diff .
          flake8 naturtag
        # mypy naturtag
      - name: Generate and send code coverage report to Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          source $VENV
          pytest ${{ env.COVERAGE_ARGS }} test
        # pip install coveralls
        # coveralls --service=github
